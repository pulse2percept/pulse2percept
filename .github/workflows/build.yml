name: Build

on: [push, pull_request]

jobs:
  build:
    name: Building on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.11", "3.10", "3.9"]
        os: [ubuntu-latest]
        exclude:
          - python-version: "3.9"
            os: macos-latest  # Skip Python 3.9 on macOS

    steps:
      # Step 1: Check out the repository
      - uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Step 3: Install dependencies (macOS only)
      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install libomp llvm
          export PATH="/usr/local/opt/llvm/bin:$PATH"
          export CPPFLAGS="-I/usr/local/opt/llvm/include -I$(brew --prefix libomp)/include"
          export LDFLAGS="-L/usr/local/opt/llvm/lib -L$(brew --prefix libomp)/lib -lomp"

      # Step 4: Install dependencies (Linux only)
      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libomp-dev zlib1g-dev libjpeg-turbo8-dev

      # Step 5: Install Python dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel build

      # Step 6: Debug OpenMP paths (macOS optional debugging step)
      - name: Debug OpenMP paths
        if: runner.os == 'macOS'
        run: |
          echo "Using Homebrew LLVM clang:"
          which clang
          which clang++
          clang --version
          echo "Include paths:"
          ls -l /usr/local/opt/llvm/include
          echo "Library paths:"
          ls -l /usr/local/opt/llvm/lib

      # Step 7: Install the package (Windows)
      - name: Install package (Windows)
        if: runner.os == 'windows-latest'
        run: |
          pip install .[dev]

      # Step 8: Install the package (Non-Windows)
      - name: Install package (Unix)
        if: runner.os != 'windows-latest'
        run: |
          pip install .[dev]
          
      # Step 9: Run tests
      - name: Run test suite with pytest
        run: |
          mkdir test_dir
          cd test_dir
          pytest --pyargs pulse2percept --cov-report=xml --cov=pulse2percept --doctest-modules
