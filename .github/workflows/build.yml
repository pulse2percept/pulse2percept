name: build

on: [push, pull_request]

jobs:
  build:
    name: Building on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.12", "3.11", "3.10", "3.9"]
        os: [ubuntu-latest, windows-latest, macos-latest]
        exclude:
          - python-version: "3.9"
            os: macos-latest

    steps:
      # Check out the repository
      - uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Install system dependencies on macOS for OpenMP and ffmpeg
      - name: Install system dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install libomp ffmpeg

      # Install system dependencies on Ubuntu for OpenMP
      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libomp-dev ffmpeg

      # Install build dependencies (including setuptools, wheel, etc.)
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel build

      # Build and install the package
      - name: Build and install the package
        run: |
          python -m build
          python -m pip install .

      # Lint with flake8
      - name: Lint with flake8
        run: |
          python -m pip install flake8
          flake8 pulse2percept --ignore N802,N806,W504 --select W503 --count --show-source --statistics

      # Log environment info
      - name: Log environment info
        run: |
          python --version
          pip freeze
          gcc --version || echo "gcc not found"

      # Run tests
      - name: Run test suite with pytest
        run: |
          mkdir test_dir
          cd test_dir
          pytest --pyargs pulse2percept --cov-report=xml --cov=pulse2percept --doctest-modules

      # [Optional] Upload coverage report
      # - name: Upload coverage report to codecov.io
      #   uses: codecov/codecov-action@v4
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     file: ./test_dir/coverage.xml
