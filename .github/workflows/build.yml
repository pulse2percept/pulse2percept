name: Build and Test

on:
  push:
    branches:
      - master
      - setup
    tags:
      - v*
  pull_request:
    branches:
      - master
      - setup

jobs:
  build:
    name: Build and Test on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.12", "3.11", "3.10", "3.9"]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      # Step 1: Checkout repository
      - uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Step 3: Install system dependencies
      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install libomp  # Install OpenMP library
          export CPPFLAGS="-Xclang -fopenmp -I/opt/homebrew/include"
          export LDFLAGS="-L/opt/homebrew/lib -lomp"

      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libomp-dev zlib1g-dev libjpeg-turbo8-dev

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install llvm -y

      # Step 4: Install Python dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel build numpy
          python -m pip install pytest flake8 coverage

      # Step 5: Lint with flake8
      - name: Lint with flake8
        run: |
          flake8 pulse2percept --ignore N802,N806,W504 --select W503 --count --show-source --statistics

      # Step 6: Build the package
      - name: Build the package
        run: |
          python -m build

      # Step 7: Log environment info
      - name: Log environment info
        run: |
          python --version
          pip freeze
          gcc --version || echo "gcc not found"

      # Step 8: Run tests with pytest
      - name: Run test suite with pytest
        run: |
          mkdir test_dir
          cd test_dir
          pytest --pyargs pulse2percept --cov=pulse2percept --doctest-modules
