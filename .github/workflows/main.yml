name: main

on: [push, pull_request]

# By default, jobs run in parallel on a fresh instance of the virtual environment:
jobs: 
  build:
    name: Building on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.5, 3.6, 3.7]
        os: [ubuntu-latest, ubuntu-16.04, windows-latest, macOS-latest]
    
    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        # For Windows:
        pip install matplotlib
        # Install p2p requirements:
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 pulse2percept --ignore N802,N806,W503 --select W504 --count --show-source --statistics
    - name: Install package (Windows)
      # https://github.com/pandas-dev/pandas/issues/981
      if: matrix.os == 'windows-latest'
      run: |
        $env:INCLUDE = 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt'
        $env:INCLUDE += ';C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\shared'
        $env:INCLUDE += ';C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\um'
        $env:LIB = 'C:\Program Files (x86)\Windows Kits\10\Lib\10.0.16299.0\ucrt\x64'
        $env:LIB += ';C:\Program Files (x86)\Windows Kits\10\Lib\10.0.16299.0\um\x64'
        $env:PATH += ';C:\Program Files (x86)\Windows Kits\10\bin\10.0.16299.0\x64'
        pip install -e .
    - name: Install package (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        pip install -e .
    - name: Test with pytest
      run: |
        pip install pytest coveralls mock pytest-cov
        mkdir test_dir
        cd test_dir
        pytest --pyargs pulse2percept --cov-report=xml --cov=pulse2percept --doctest-modules
    - name: Upload coverage report
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./test_dir/coverage.xml
        flags: unittests
        name: codecov-umbrella
        yml: ./codecov.yml
